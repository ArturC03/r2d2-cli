name: R2D2 CLI Installer

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'installer/**'
      - '.github/workflows/installer.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'installer/**'
      - '.github/workflows/installer.yml'

jobs:
  test:
    name: Test Installer
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('installer/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: installer
      run: go mod download

    - name: Run tests
      working-directory: installer
      run: go test -v -race -coverprofile=coverage.out

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./installer/coverage.out
        flags: installer
        name: installer-coverage

  build:
    name: Build Installer
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('installer/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: installer
      run: go mod download

    - name: Build installer (Unix)
      if: matrix.os != 'windows-latest'
      working-directory: installer
      run: make build

    - name: Build installer (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: installer
      run: go build -o build/r2d2-installer.exe .

    - name: Test installer binary (Unix)
      if: matrix.os != 'windows-latest'
      working-directory: installer
      run: |
        ./build/r2d2-installer --help || echo "Expected help output"

    - name: Test installer binary (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: installer
      run: |
        ./build/r2d2-installer.exe --help || echo "Expected help output"

    - name: Upload installer artifact
      uses: actions/upload-artifact@v3
      with:
        name: r2d2-installer-${{ matrix.os }}
        path: |
          installer/build/r2d2-installer*
        retention-days: 30

  cross-compile:
    name: Cross-compile Installer
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('installer/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: installer
      run: go mod download

    - name: Cross-compile for all platforms
      working-directory: installer
      run: make build-all

    - name: Upload cross-compiled artifacts
      uses: actions/upload-artifact@v3
      with:
        name: r2d2-installer-cross-compiled
        path: |
          installer/build/r2d2-installer-*
        retention-days: 90

  lint:
    name: Lint Installer Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: installer

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './installer/...'

    - name: Run Nancy vulnerability scanner
      working-directory: installer
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -m all | nancy sleuth
